{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Introduction\n",
        "This data set houses County Health Data from 2014-2015, and will be used to anazyle loactional food insecuirty and its relation to the median household income.\n",
        "\n",
        "Download [CountyHealthData.csv](https://docs.google.com/spreadsheets/d/18tKFuLI6ZVF4x1zf7_4yunJet_C8BkZ8gxC8b86xU4g/edit)\n",
        "\n",
        "#Start Here!\n",
        "\n",
        "To being, start by importing the CountyHealtData_2014-2015.csv file into a Phyton notebook"
      ],
      "metadata": {
        "id": "bSbodS6_gVdD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qiu7J13alf5B",
        "outputId": "28dfcfca-4dc6-4578-c3c0-b06d3b35b7fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "drive.mount(\"/content/gdrive\", force_remount=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6Y4HKeexlp0u",
        "outputId": "97733bcf-058f-40c6-ddbc-c0273015f601"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Import the following pandas package as it allows Python to store our data\n",
        "`import numpy as np`\n",
        "`import pandas as pd`\n",
        "\n"
      ],
      "metadata": {
        "id": "nw09KzVIZzgm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ],
      "metadata": {
        "id": "4oPiF8IdltQD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Next in our process is telling Phyton where to find our imported data as well as naming it (`df=`), we do this by givng it a pathway to follow using the following\n",
        "\n",
        "`df=pd.read_csv('gdrive/My Drive/Colab Notebooks/CountyHealthData_2014-2015.csv')`"
      ],
      "metadata": {
        "id": "7bPrunBAaoU9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv('gdrive/My Drive/Colab Notebooks/CountyHealthData_2014-2015.csv')"
      ],
      "metadata": {
        "id": "TpNdO7ZXlyc5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Now we can begin condensing and filtering our data to fit our desired anylsis; the following are the variables we are wanting to use\n",
        "  - State\n",
        "  - Region\n",
        "  - Food Insecurity\n",
        "  - Median household income\n",
        "  - Children elgible for free lunch\n",
        "\n",
        "- We will first start by isolating the data associated with the southern regions. To do this we will ise the use a statement that looks for a the specific column name and select the desired rows\n",
        "\n",
        "  `df[df[\"Region\"] == \"South\"]`"
      ],
      "metadata": {
        "id": "sJxVXsc-esnf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[df[\"Region\"] == \"South\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 791
        },
        "id": "Lx6sVdUapDDY",
        "outputId": "a0a3f202-67fe-4ca2-bb62-1a0d046623c7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     State Region            Division          County   FIPS  GEOID  \\\n",
              "46      AL  South  East South Central  Autauga County   1001   1001   \n",
              "47      AL  South  East South Central  Autauga County   1001   1001   \n",
              "48      AL  South  East South Central  Baldwin County   1003   1003   \n",
              "49      AL  South  East South Central  Baldwin County   1003   1003   \n",
              "50      AL  South  East South Central  Barbour County   1005   1005   \n",
              "...    ...    ...                 ...             ...    ...    ...   \n",
              "6058    WV  South      South Atlantic     Wirt County  54105  54105   \n",
              "6059    WV  South      South Atlantic     Wood County  54107  54107   \n",
              "6060    WV  South      South Atlantic     Wood County  54107  54107   \n",
              "6061    WV  South      South Atlantic  Wyoming County  54109  54109   \n",
              "6062    WV  South      South Atlantic  Wyoming County  54109  54109   \n",
              "\n",
              "       SMS Region      Year  Premature death  Poor or fair health  ...  \\\n",
              "46      Region 16  1/1/2014           8376.0                0.228  ...   \n",
              "47      Region 16  1/1/2015           8405.0                0.228  ...   \n",
              "48      Region 16  1/1/2014           7770.0                0.127  ...   \n",
              "49      Region 16  1/1/2015           7457.0                0.127  ...   \n",
              "50    Insuff Data  1/1/2014           9458.0                0.234  ...   \n",
              "...           ...       ...              ...                  ...  ...   \n",
              "6058  Insuff Data  1/1/2015          10747.0                0.161  ...   \n",
              "6059    Region 27  1/1/2014           7944.0                0.205  ...   \n",
              "6060    Region 27  1/1/2015           8111.0                0.205  ...   \n",
              "6061    Region 27  1/1/2014          14864.0                0.348  ...   \n",
              "6062    Region 27  1/1/2015          17265.0                0.348  ...   \n",
              "\n",
              "      Drug poisoning deaths  Uninsured adults  Uninsured children  \\\n",
              "46                     7.42             0.180               0.047   \n",
              "47                     8.23             0.169               0.037   \n",
              "48                    14.71             0.209               0.056   \n",
              "49                    15.29             0.199               0.054   \n",
              "50                      NaN             0.242               0.061   \n",
              "...                     ...               ...                 ...   \n",
              "6058                    NaN             0.235               0.055   \n",
              "6059                  11.03             0.222               0.044   \n",
              "6060                  12.84             0.217               0.040   \n",
              "6061                  59.77             0.213               0.050   \n",
              "6062                  79.78             0.222               0.049   \n",
              "\n",
              "      Health care costs  Could not see doctor due to cost  \\\n",
              "46              10219.0                             0.156   \n",
              "47               9939.0                             0.156   \n",
              "48               9624.0                             0.144   \n",
              "49               9502.0                             0.144   \n",
              "50              10809.0                             0.169   \n",
              "...                 ...                               ...   \n",
              "6058            10459.0                             0.131   \n",
              "6059            10707.0                             0.170   \n",
              "6060            10355.0                             0.170   \n",
              "6061            10662.0                             0.242   \n",
              "6062            10593.0                             0.242   \n",
              "\n",
              "      Other primary care providers  Median household income  \\\n",
              "46                            18.0                    51441   \n",
              "47                            18.0                    51868   \n",
              "48                            27.0                    48867   \n",
              "49                            29.0                    47539   \n",
              "50                            11.0                    30287   \n",
              "...                            ...                      ...   \n",
              "6058                         119.0                    37132   \n",
              "6059                          89.0                    42065   \n",
              "6060                          96.0                    41205   \n",
              "6061                          13.0                    32880   \n",
              "6062                          13.0                    34525   \n",
              "\n",
              "      Children eligible for free lunch  Homicide rate  \\\n",
              "46                               0.361           3.57   \n",
              "47                               0.383           4.60   \n",
              "48                               0.368           4.18   \n",
              "49                               0.344           4.30   \n",
              "50                               0.664           5.13   \n",
              "...                                ...            ...   \n",
              "6058                             0.526            NaN   \n",
              "6059                             0.433           3.29   \n",
              "6060                             0.450           3.30   \n",
              "6061                             0.513           8.29   \n",
              "6062                             0.582           8.50   \n",
              "\n",
              "      Inadequate social support  \n",
              "46                        0.237  \n",
              "47                          NaN  \n",
              "48                        0.193  \n",
              "49                          NaN  \n",
              "50                        0.176  \n",
              "...                         ...  \n",
              "6058                        NaN  \n",
              "6059                      0.178  \n",
              "6060                        NaN  \n",
              "6061                      0.242  \n",
              "6062                        NaN  \n",
              "\n",
              "[2803 rows x 64 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-88700fd1-b62d-44a2-82d6-d43e6d45db68\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Region</th>\n",
              "      <th>Division</th>\n",
              "      <th>County</th>\n",
              "      <th>FIPS</th>\n",
              "      <th>GEOID</th>\n",
              "      <th>SMS Region</th>\n",
              "      <th>Year</th>\n",
              "      <th>Premature death</th>\n",
              "      <th>Poor or fair health</th>\n",
              "      <th>...</th>\n",
              "      <th>Drug poisoning deaths</th>\n",
              "      <th>Uninsured adults</th>\n",
              "      <th>Uninsured children</th>\n",
              "      <th>Health care costs</th>\n",
              "      <th>Could not see doctor due to cost</th>\n",
              "      <th>Other primary care providers</th>\n",
              "      <th>Median household income</th>\n",
              "      <th>Children eligible for free lunch</th>\n",
              "      <th>Homicide rate</th>\n",
              "      <th>Inadequate social support</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>Autauga County</td>\n",
              "      <td>1001</td>\n",
              "      <td>1001</td>\n",
              "      <td>Region 16</td>\n",
              "      <td>1/1/2014</td>\n",
              "      <td>8376.0</td>\n",
              "      <td>0.228</td>\n",
              "      <td>...</td>\n",
              "      <td>7.42</td>\n",
              "      <td>0.180</td>\n",
              "      <td>0.047</td>\n",
              "      <td>10219.0</td>\n",
              "      <td>0.156</td>\n",
              "      <td>18.0</td>\n",
              "      <td>51441</td>\n",
              "      <td>0.361</td>\n",
              "      <td>3.57</td>\n",
              "      <td>0.237</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>Autauga County</td>\n",
              "      <td>1001</td>\n",
              "      <td>1001</td>\n",
              "      <td>Region 16</td>\n",
              "      <td>1/1/2015</td>\n",
              "      <td>8405.0</td>\n",
              "      <td>0.228</td>\n",
              "      <td>...</td>\n",
              "      <td>8.23</td>\n",
              "      <td>0.169</td>\n",
              "      <td>0.037</td>\n",
              "      <td>9939.0</td>\n",
              "      <td>0.156</td>\n",
              "      <td>18.0</td>\n",
              "      <td>51868</td>\n",
              "      <td>0.383</td>\n",
              "      <td>4.60</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>Baldwin County</td>\n",
              "      <td>1003</td>\n",
              "      <td>1003</td>\n",
              "      <td>Region 16</td>\n",
              "      <td>1/1/2014</td>\n",
              "      <td>7770.0</td>\n",
              "      <td>0.127</td>\n",
              "      <td>...</td>\n",
              "      <td>14.71</td>\n",
              "      <td>0.209</td>\n",
              "      <td>0.056</td>\n",
              "      <td>9624.0</td>\n",
              "      <td>0.144</td>\n",
              "      <td>27.0</td>\n",
              "      <td>48867</td>\n",
              "      <td>0.368</td>\n",
              "      <td>4.18</td>\n",
              "      <td>0.193</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>Baldwin County</td>\n",
              "      <td>1003</td>\n",
              "      <td>1003</td>\n",
              "      <td>Region 16</td>\n",
              "      <td>1/1/2015</td>\n",
              "      <td>7457.0</td>\n",
              "      <td>0.127</td>\n",
              "      <td>...</td>\n",
              "      <td>15.29</td>\n",
              "      <td>0.199</td>\n",
              "      <td>0.054</td>\n",
              "      <td>9502.0</td>\n",
              "      <td>0.144</td>\n",
              "      <td>29.0</td>\n",
              "      <td>47539</td>\n",
              "      <td>0.344</td>\n",
              "      <td>4.30</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>East South Central</td>\n",
              "      <td>Barbour County</td>\n",
              "      <td>1005</td>\n",
              "      <td>1005</td>\n",
              "      <td>Insuff Data</td>\n",
              "      <td>1/1/2014</td>\n",
              "      <td>9458.0</td>\n",
              "      <td>0.234</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.242</td>\n",
              "      <td>0.061</td>\n",
              "      <td>10809.0</td>\n",
              "      <td>0.169</td>\n",
              "      <td>11.0</td>\n",
              "      <td>30287</td>\n",
              "      <td>0.664</td>\n",
              "      <td>5.13</td>\n",
              "      <td>0.176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6058</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>Wirt County</td>\n",
              "      <td>54105</td>\n",
              "      <td>54105</td>\n",
              "      <td>Insuff Data</td>\n",
              "      <td>1/1/2015</td>\n",
              "      <td>10747.0</td>\n",
              "      <td>0.161</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.235</td>\n",
              "      <td>0.055</td>\n",
              "      <td>10459.0</td>\n",
              "      <td>0.131</td>\n",
              "      <td>119.0</td>\n",
              "      <td>37132</td>\n",
              "      <td>0.526</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6059</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>Wood County</td>\n",
              "      <td>54107</td>\n",
              "      <td>54107</td>\n",
              "      <td>Region 27</td>\n",
              "      <td>1/1/2014</td>\n",
              "      <td>7944.0</td>\n",
              "      <td>0.205</td>\n",
              "      <td>...</td>\n",
              "      <td>11.03</td>\n",
              "      <td>0.222</td>\n",
              "      <td>0.044</td>\n",
              "      <td>10707.0</td>\n",
              "      <td>0.170</td>\n",
              "      <td>89.0</td>\n",
              "      <td>42065</td>\n",
              "      <td>0.433</td>\n",
              "      <td>3.29</td>\n",
              "      <td>0.178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6060</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>Wood County</td>\n",
              "      <td>54107</td>\n",
              "      <td>54107</td>\n",
              "      <td>Region 27</td>\n",
              "      <td>1/1/2015</td>\n",
              "      <td>8111.0</td>\n",
              "      <td>0.205</td>\n",
              "      <td>...</td>\n",
              "      <td>12.84</td>\n",
              "      <td>0.217</td>\n",
              "      <td>0.040</td>\n",
              "      <td>10355.0</td>\n",
              "      <td>0.170</td>\n",
              "      <td>96.0</td>\n",
              "      <td>41205</td>\n",
              "      <td>0.450</td>\n",
              "      <td>3.30</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6061</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>Wyoming County</td>\n",
              "      <td>54109</td>\n",
              "      <td>54109</td>\n",
              "      <td>Region 27</td>\n",
              "      <td>1/1/2014</td>\n",
              "      <td>14864.0</td>\n",
              "      <td>0.348</td>\n",
              "      <td>...</td>\n",
              "      <td>59.77</td>\n",
              "      <td>0.213</td>\n",
              "      <td>0.050</td>\n",
              "      <td>10662.0</td>\n",
              "      <td>0.242</td>\n",
              "      <td>13.0</td>\n",
              "      <td>32880</td>\n",
              "      <td>0.513</td>\n",
              "      <td>8.29</td>\n",
              "      <td>0.242</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6062</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>South Atlantic</td>\n",
              "      <td>Wyoming County</td>\n",
              "      <td>54109</td>\n",
              "      <td>54109</td>\n",
              "      <td>Region 27</td>\n",
              "      <td>1/1/2015</td>\n",
              "      <td>17265.0</td>\n",
              "      <td>0.348</td>\n",
              "      <td>...</td>\n",
              "      <td>79.78</td>\n",
              "      <td>0.222</td>\n",
              "      <td>0.049</td>\n",
              "      <td>10593.0</td>\n",
              "      <td>0.242</td>\n",
              "      <td>13.0</td>\n",
              "      <td>34525</td>\n",
              "      <td>0.582</td>\n",
              "      <td>8.50</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2803 rows × 64 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88700fd1-b62d-44a2-82d6-d43e6d45db68')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-88700fd1-b62d-44a2-82d6-d43e6d45db68 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-88700fd1-b62d-44a2-82d6-d43e6d45db68');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-544837f7-07ed-483c-8891-bbc8d7cfe53d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-544837f7-07ed-483c-8891-bbc8d7cfe53d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-544837f7-07ed-483c-8891-bbc8d7cfe53d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- We will now name this new data set to keep our process organized. The folowing process is simlar to when we asked Python to read our our data set as `df`\n",
        "\n",
        "  `South_subset = df[df[\"Region\"] == \"South\"].copy()`"
      ],
      "metadata": {
        "id": "xZQ4T_otgO3I"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "South_subset = df[df[\"Region\"] == \"South\"].copy()"
      ],
      "metadata": {
        "id": "T6I1FX5LpSPk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Moving foward we need to filter out the unnecssary coloumns that are not being used for this analysis. To this we will use a statement that will list out the coloumns we are wanting to keep.\n",
        "  - State\n",
        "  - Region\n",
        "  - Food insecurity\n",
        "  - Median household income\n",
        "  - Children eligible for free lunch\n",
        "\n",
        "- We will be using the statment `.loc` in order to condense the large subset\n",
        "\n",
        "  `South_subset.loc[:,[\"State\",\"Region\", \"Food insecurity\",\"Median household income\",\"Children eligible for free lunch\"]]`"
      ],
      "metadata": {
        "id": "o3VVMHHvgtOZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "South_subset.loc[:,[\"State\",\"Region\",\"Food insecurity\",\"Median household income\",\"Children eligible for free lunch\"]]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NHa1TjcFclht",
        "outputId": "e582eced-f6ef-4cb1-b1ae-1c758f75773e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     State Region  Food insecurity  Median household income  \\\n",
              "46      AL  South            0.136                    51441   \n",
              "47      AL  South            0.135                    51868   \n",
              "48      AL  South            0.131                    48867   \n",
              "49      AL  South            0.135                    47539   \n",
              "50      AL  South            0.230                    30287   \n",
              "...    ...    ...              ...                      ...   \n",
              "6058    WV  South            0.147                    37132   \n",
              "6059    WV  South            0.139                    42065   \n",
              "6060    WV  South            0.139                    41205   \n",
              "6061    WV  South            0.141                    32880   \n",
              "6062    WV  South            0.145                    34525   \n",
              "\n",
              "      Children eligible for free lunch  \n",
              "46                               0.361  \n",
              "47                               0.383  \n",
              "48                               0.368  \n",
              "49                               0.344  \n",
              "50                               0.664  \n",
              "...                                ...  \n",
              "6058                             0.526  \n",
              "6059                             0.433  \n",
              "6060                             0.450  \n",
              "6061                             0.513  \n",
              "6062                             0.582  \n",
              "\n",
              "[2803 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ac9e2134-40ac-4723-8bce-521cd762ba2f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Region</th>\n",
              "      <th>Food insecurity</th>\n",
              "      <th>Median household income</th>\n",
              "      <th>Children eligible for free lunch</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>0.136</td>\n",
              "      <td>51441</td>\n",
              "      <td>0.361</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>0.135</td>\n",
              "      <td>51868</td>\n",
              "      <td>0.383</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>0.131</td>\n",
              "      <td>48867</td>\n",
              "      <td>0.368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>0.135</td>\n",
              "      <td>47539</td>\n",
              "      <td>0.344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>AL</td>\n",
              "      <td>South</td>\n",
              "      <td>0.230</td>\n",
              "      <td>30287</td>\n",
              "      <td>0.664</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6058</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>0.147</td>\n",
              "      <td>37132</td>\n",
              "      <td>0.526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6059</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>0.139</td>\n",
              "      <td>42065</td>\n",
              "      <td>0.433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6060</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>0.139</td>\n",
              "      <td>41205</td>\n",
              "      <td>0.450</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6061</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>0.141</td>\n",
              "      <td>32880</td>\n",
              "      <td>0.513</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6062</th>\n",
              "      <td>WV</td>\n",
              "      <td>South</td>\n",
              "      <td>0.145</td>\n",
              "      <td>34525</td>\n",
              "      <td>0.582</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2803 rows × 5 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac9e2134-40ac-4723-8bce-521cd762ba2f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ac9e2134-40ac-4723-8bce-521cd762ba2f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ac9e2134-40ac-4723-8bce-521cd762ba2f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-225e51ba-7788-4a8d-bcc9-8962ab098a74\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-225e51ba-7788-4a8d-bcc9-8962ab098a74')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-225e51ba-7788-4a8d-bcc9-8962ab098a74 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"South_subset\",\n  \"rows\": 2803,\n  \"fields\": [\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"AL\",\n          \"AR\",\n          \"GA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"South\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Food insecurity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.042009108061204024,\n        \"min\": 0.052,\n        \"max\": 0.352,\n        \"num_unique_values\": 250,\n        \"samples\": [\n          0.122\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Median household income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11651,\n        \"min\": 22126,\n        \"max\": 121250,\n        \"num_unique_values\": 2666,\n        \"samples\": [\n          48338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Children eligible for free lunch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1526807828896368,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 660,\n        \"samples\": [\n          0.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Once again we will name our new data set, though this time we just set the name to what the data set holds\n",
        "\n",
        "  `Final_Subset = South_subset.loc[:,[\"State\",\"Region\",\"Food insecurity\",\"Median household income\",\"Children eligible for free lunch\"]].copy()`"
      ],
      "metadata": {
        "id": "apCDuIi4nZMe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Final_Subset = South_subset.loc[:,[\"State\",\"Region\",\"Food insecurity\",\"Median household income\",\"Children eligible for free lunch\"]].copy()"
      ],
      "metadata": {
        "id": "EhbnNTqLmVlv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Finally we have condensed our data into the desired subset. The next next step will be to convert it into a .csv file\n",
        "\n",
        "  `Final_Subset.to_csv(\"Final_Subset.csv\", index=False)`\n",
        "\n"
      ],
      "metadata": {
        "id": "TZBjYYsRo0JO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Final_Subset.to_csv(\"Final_Subset.csv\", index=False)"
      ],
      "metadata": {
        "id": "AYMXfvoGpdYm"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
